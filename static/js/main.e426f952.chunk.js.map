{"version":3,"sources":["components/NewMovie/NewMovie.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","helpers.ts","App.tsx","index.tsx"],"names":["Fields","MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","getInputNameOnValidate","name","toUpperCase","slice","getInputNameOnBlur","getInputNameOnTouch","NewMovie","state","isTitleValid","isImgUrlValid","isImdbUrlValid","isImdbIdValid","isTitleValidOnBlur","isImgUrlValidOnBlur","isImdbUrlValidOnBlur","isImdbIdValidOnBlur","wasTitleTouched","wasImgUrlTouched","wasImdbUrlTouched","wasImdbIdTouched","handleChange","event","target","value","inputNameOnValidate","inputNameOnBlur","Description","setState","currentState","validateOnBlur","handleOnBlur","handleSubmit","preventDefault","validateForm","props","onAdd","trim","clearState","handleFocus","inputNameOnTouch","regex","match","Title","ImgUrl","ImdbUrl","ImdbId","imdbIds","includes","Error","this","onSubmit","htmlFor","classNames","type","id","onChange","onBlur","onFocus","disabled","React","Component","App","moviesFromServer","addMovie","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e426f952.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { getInputNameOnValidate, getInputNameOnBlur, getInputNameOnTouch } from '../../helpers';\nimport './NewMovie.scss';\n\nenum Fields {\n  Title = 'title',\n  Description = 'description',\n  ImgUrl = 'imgUrl',\n  ImdbUrl = 'imdbUrl',\n  ImdbId = 'imdbId',\n}\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n  imdbIds: string[];\n};\n\ntype State = Movie & {\n  isTitleValid: boolean;\n  isImgUrlValid: boolean;\n  isImdbUrlValid: boolean;\n  isImdbIdValid: boolean;\n  isTitleValidOnBlur: boolean;\n  isImgUrlValidOnBlur: boolean;\n  isImdbUrlValidOnBlur: boolean;\n  isImdbIdValidOnBlur: boolean;\n  wasTitleTouched: boolean;\n  wasImgUrlTouched: boolean;\n  wasImdbUrlTouched: boolean;\n  wasImdbIdTouched: boolean;\n};\n\nexport class NewMovie extends React.Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isTitleValid: true,\n    isImgUrlValid: true,\n    isImdbUrlValid: true,\n    isImdbIdValid: true,\n    isTitleValidOnBlur: false,\n    isImgUrlValidOnBlur: false,\n    isImdbUrlValidOnBlur: false,\n    isImdbIdValidOnBlur: false,\n    wasTitleTouched: false,\n    wasImgUrlTouched: false,\n    wasImdbUrlTouched: false,\n    wasImdbIdTouched: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>\n  | React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n    const inputNameOnValidate = getInputNameOnValidate(name);\n    const inputNameOnBlur = getInputNameOnBlur(name);\n\n    if (name === Fields.Description) {\n      this.setState((currentState) => ({\n        ...currentState,\n        [name]: value,\n      }));\n    } else {\n      this.setState((currentState) => ({\n        ...currentState,\n        [name]: value,\n        [inputNameOnValidate]: true,\n        [inputNameOnBlur]: this.validateOnBlur(event),\n      }));\n    }\n  };\n\n  handleOnBlur = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    const { name } = event.target;\n    const inputNameOnBlur = getInputNameOnBlur(name);\n\n    this.setState((currentState) => ({\n      ...currentState,\n      [inputNameOnBlur]: this.validateOnBlur(event),\n    }));\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const isFormValid = this.validateForm();\n\n    if (isFormValid) {\n      this.props.onAdd({\n        title: title.trim(),\n        description: description.trim(),\n        imgUrl: imgUrl.trim(),\n        imdbUrl: imdbUrl.trim(),\n        imdbId: imdbId.trim(),\n      });\n\n      this.clearState();\n    }\n  };\n\n  handleFocus = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    const { name } = event.target;\n    const inputNameOnTouch = getInputNameOnTouch(name);\n\n    this.setState((state) => ({\n      ...state,\n      [inputNameOnTouch]: true,\n    }));\n  };\n\n  validateForm = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (!title || !imgUrl || !imdbUrl || !imdbId) {\n      this.setState({\n        isTitleValid: !!title.trim(),\n        isImgUrlValid: !!imgUrl.trim(),\n        isImdbUrlValid: !!imdbUrl.trim(),\n        isImdbIdValid: !!imdbId.trim(),\n      });\n\n      return false;\n    }\n\n    if (!imgUrl.match(regex) || !imdbUrl.match(regex)) {\n      this.setState({\n        isImgUrlValid: !!imgUrl.match(regex),\n        isImdbUrlValid: !!imdbUrl.match(regex),\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validateOnBlur = (event: React.FocusEvent<HTMLInputElement, Element>\n  | React.ChangeEvent<HTMLInputElement>\n  | React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    switch (name) {\n      case Fields.Title: {\n        return value.trim();\n      }\n\n      case Fields.ImgUrl: {\n        return value.trim() && !!value.match(regex);\n      }\n\n      case Fields.ImdbUrl: {\n        return value.trim() && !!value.match(regex);\n      }\n\n      case Fields.ImdbId: {\n        return value.trim() && !this.props.imdbIds.includes(value);\n      }\n\n      default:\n        throw new Error('enter valid data');\n    }\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      isTitleValid: true,\n      isImgUrlValid: true,\n      isImdbUrlValid: true,\n      isImdbIdValid: true,\n      isTitleValidOnBlur: false,\n      isImgUrlValidOnBlur: false,\n      isImdbUrlValidOnBlur: false,\n      isImdbIdValidOnBlur: false,\n      wasTitleTouched: false,\n      wasImgUrlTouched: false,\n      wasImdbUrlTouched: false,\n      wasImdbIdTouched: false,\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n      isTitleValid,\n      isImdbIdValid,\n      isImdbUrlValid,\n      isImgUrlValid,\n      isTitleValidOnBlur,\n      isImgUrlValidOnBlur,\n      isImdbUrlValidOnBlur,\n      isImdbIdValidOnBlur,\n      wasTitleTouched,\n      wasImgUrlTouched,\n      wasImdbUrlTouched,\n      wasImdbIdTouched,\n    } = this.state;\n\n    return (\n      <>\n        <h3 className=\"title\">Add new movie</h3>\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <div className=\"field\">\n            <label className=\"label\" htmlFor={Fields.Title}>\n              Title\n            </label>\n            <div className=\"control has-icons-right\">\n              <input\n                className={classNames(\n                  'input',\n                  { 'is-success': wasTitleTouched && isTitleValidOnBlur },\n                  {\n                    'is-danger': (\n                      !isTitleValid\n                      || (wasTitleTouched && title && !isTitleValidOnBlur)),\n                  },\n                )}\n                type=\"text\"\n                id={Fields.Title}\n                name={Fields.Title}\n                value={title}\n                onChange={this.handleChange}\n                onBlur={this.handleOnBlur}\n                onFocus={this.handleFocus}\n              />\n              {wasTitleTouched && isTitleValidOnBlur && (\n                <span className=\"icon is-small is-right\">\n                  <i className=\"fas fa-check has-text-success\" />\n                </span>\n              )}\n            </div>\n            {(!isTitleValid || (wasTitleTouched && title && !isTitleValidOnBlur)) && (\n              <p className=\"help is-danger\">This title is invalid</p>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\" htmlFor={Fields.Description}>\n              Description\n            </label>\n            <div className=\"control\">\n              <textarea\n                className=\"textarea\"\n                id={Fields.Description}\n                name={Fields.Description}\n                value={description}\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\" htmlFor={Fields.ImdbUrl}>\n              ImdbUrl\n            </label>\n            <div className=\"control has-icons-right\">\n              <input\n                className={classNames(\n                  'input',\n                  { 'is-success': wasImdbUrlTouched && isImdbUrlValidOnBlur },\n                  {\n                    'is-danger': (\n                      !isImdbUrlValid\n                      || (wasImdbUrlTouched && imdbUrl && !isImdbUrlValidOnBlur)),\n                  },\n                )}\n                type=\"text\"\n                id={Fields.ImdbUrl}\n                name={Fields.ImdbUrl}\n                value={imdbUrl}\n                onChange={this.handleChange}\n                onBlur={this.handleOnBlur}\n                onFocus={this.handleFocus}\n              />\n              {wasImdbUrlTouched && isImdbUrlValidOnBlur && (\n                <span className=\"icon is-small is-right\">\n                  <i className=\"fas fa-check has-text-success\" />\n                </span>\n              )}\n            </div>\n            {(!isImdbUrlValid || (wasImdbUrlTouched && imdbUrl && !isImdbUrlValidOnBlur)) && (\n              <p className=\"help is-danger\">This imdb url is invalid</p>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\" htmlFor={Fields.ImgUrl}>\n              ImgUrl\n            </label>\n            <div className=\"control has-icons-right\">\n              <input\n                className={classNames(\n                  'input',\n                  { 'is-success': wasImgUrlTouched && isImgUrlValidOnBlur },\n                  {\n                    'is-danger': (\n                      !isImgUrlValid\n                      || (wasImgUrlTouched && imgUrl && !isImgUrlValidOnBlur)),\n                  },\n                )}\n                type=\"text\"\n                id={Fields.ImgUrl}\n                name={Fields.ImgUrl}\n                value={imgUrl}\n                onChange={this.handleChange}\n                onBlur={this.handleOnBlur}\n                onFocus={this.handleFocus}\n              />\n              {wasImgUrlTouched && isImgUrlValidOnBlur && (\n                <span className=\"icon is-small is-right\">\n                  <i className=\"fas fa-check has-text-success\" />\n                </span>\n              )}\n            </div>\n            {(!isImgUrlValid || (wasImgUrlTouched && imgUrl && !isImgUrlValidOnBlur)) && (\n              <p className=\"help is-danger\">This img url is invalid</p>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\" htmlFor={Fields.ImdbId}>\n              ImdbId\n            </label>\n            <div className=\"control has-icons-right\">\n              <input\n                className={classNames(\n                  'input',\n                  { 'is-success': wasImdbIdTouched && isImdbIdValidOnBlur },\n                  {\n                    'is-danger': (\n                      !isImdbIdValid\n                      || (wasImdbIdTouched && imdbId && !isImdbIdValidOnBlur)),\n                  },\n                )}\n                type=\"text\"\n                id={Fields.ImdbId}\n                name={Fields.ImdbId}\n                value={imdbId}\n                onChange={this.handleChange}\n                onBlur={this.handleOnBlur}\n                onFocus={this.handleFocus}\n              />\n              {wasImdbIdTouched && isImdbIdValidOnBlur && (\n                <span className=\"icon is-small is-right\">\n                  <i className=\"fas fa-check has-text-success\" />\n                </span>\n              )}\n            </div>\n            {(!isImdbIdValid || (wasImdbIdTouched && imdbId && !isImdbIdValidOnBlur)) && (\n              <p className=\"help is-danger\">This imdb url is invalid</p>\n            )}\n          </div>\n\n          <div className=\"control\">\n            <button\n              className=\"button ui submit is-success\"\n              type=\"submit\"\n              disabled={\n                !isTitleValid\n                || !isImdbUrlValid\n                || !isImgUrlValid\n                || !isImdbIdValid\n              }\n            >\n              Add movie\n            </button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","export const getInputNameOnValidate = (name: string) => (\n  `is${name[0].toUpperCase() + name.slice(1)}Valid`\n);\n\nexport const getInputNameOnBlur = (name: string) => (\n  `is${name[0].toUpperCase() + name.slice(1)}ValidOnBlur`\n);\n\nexport const getInputNameOnTouch = (name: string) => (\n  `was${name[0].toUpperCase() + name.slice(1)}Touched`\n);\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n    const imdbIds = movies.map(movie => movie.imdbId);\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n            imdbIds={imdbIds}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}